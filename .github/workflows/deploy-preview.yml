name: Manage Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  manage_environment:
    runs-on: ubuntu-latest
    name: Manage Preview Environment

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      # If PR is opened or updated, apply infrastructure
      - name: Terraform Apply
        if: github.event.action != 'closed'
        working-directory: terraform
        run: terraform apply -auto-approve

      # If PR is closed, destroy infrastructure
      - name: Terraform Destroy
        if: github.event.action == 'closed'
        working-directory: terraform
        run: terraform destroy -auto-approve

      # Only build/deploy if creating or updating PR
      - name: Login to Amazon ECR
        if: github.event.action != 'closed'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get ECR Repo URL
        if: github.event.action != 'closed'
        working-directory: terraform
        run: |
          REPO_URL=$(terraform output -raw ecr_repository_url 2> /dev/null)
          echo "REPO_URL=$REPO_URL" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        if: github.event.action != 'closed'
        env:
          IMAGE_TAG: ${{ github.sha }}
          REPO_URL: ${{ env.REPO_URL }}
        run: |
          docker build -t $REPO_URL:$IMAGE_TAG -f docker/Dockerfile docker
          docker push $REPO_URL:$IMAGE_TAG

      - name: Update ECS Service to Use New Image
        if: github.event.action != 'closed'
        env:
          CLUSTER_NAME: my-fargate-cluster
          SERVICE_NAME: my-preview-service
          IMAGE_TAG: ${{ github.sha }}
          REPO_URL: ${{ env.REPO_URL }}
        run: |
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --force-new-deployment \
            --region us-east-1
